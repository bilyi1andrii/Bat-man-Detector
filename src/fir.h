#ifndef INC_FIR_H_
#define INC_FIR_H_

#include "arm_math.h"
#include "arm_const_structs.h"
#include "main.h"
#include <math.h>

#define SIZE 1024

// number of coefficients for FIR filter
#define COEFFICIENTS 33

float32_t FILTER_COEFFICIENTS[COEFFICIENTS] = {
	-0.00547416143012136729995020800743077416,
	0.057310092605310503088844598096329718828,
	0.007155081466785805956176691466907868744,
	-0.020253972275255830576279336696643440519,
	-0.003463771026275067228816784137279682909,
	0.025520363940187973383899588952772319317,
	0.00362865480013476035189845525508189894,
	-0.032474208590073196101233321542167686857,
	-0.003755555374645681062512059256164320686,
	0.043169116754212658038092342849267879501,
	0.003857051671379815686868663959785408224,
	-0.062028277003388920807225304088206030428,
	-0.003951738390891106587898828905736081651,
	0.105105868259460694114082457417680416256,
	0.004006858953617878534025908976445862208,
	-0.317979853251991795293207587747019715607,
	0.495995158660029966668503220716957002878,
	-0.317979853251991795293207587747019715607,
	0.004006858953617878534025908976445862208,
	0.105105868259460694114082457417680416256,
	-0.003951738390891106587898828905736081651,
	-0.062028277003388920807225304088206030428,
	0.003857051671379815686868663959785408224,
	0.043169116754212658038092342849267879501,
	-0.003755555374645681062512059256164320686,
	-0.032474208590073196101233321542167686857,
	0.00362865480013476035189845525508189894,
	0.025520363940187973383899588952772319317,
	-0.003463771026275067228816784137279682909,
	-0.020253972275255830576279336696643440519,
	0.007155081466785805956176691466907868744,
	0.057310092605310503088844598096329718828,
	-0.00547416143012136729995020800743077416
};

arm_fir_instance_f32 FILTER;

float32_t FILTER_STATES[SIZE + COEFFICIENTS - 1];

// initializes FIR High-Pass filter
void init_filter();

// Performs FIR-filter filtration on the given buffer
void fir_filter(uint16_t* buffer);

void init_filter() {
	arm_fir_init_f32(
			&FILTER, COEFFICIENTS,
			FILTER_COEFFICIENTS,
			FILTER_STATES, SIZE
			);
}


void fir_filter(uint16_t* buffer) {
	float32_t float_buffer[SIZE];
	float32_t float_result[SIZE];
	for (uint16_t i = 0; i < SIZE; i++) {
		float_buffer[i] = (float32_t)buffer[i];
	}
	arm_fir_f32(&FILTER, float_buffer, float_result, SIZE);
	for (uint16_t i = 0; i < SIZE; i++) {
			buffer[i] = (uint16_t) float_result[i];
		}
}

#endif /* INC_FIR_H_ */
